{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Manage incidents and replicate them on remote tenant. :: To be deployed on the target tenant or tenant 1:: ", 
        "description": "##",
        "prerequisites": "Create Managed Identity and App registration",
        "lastUpdateTime": "2024-01-25T00:00:00.000Z", 
        "entities": ["Account"], 
        "tags": ["ManageIncidents"], 
        "support": {
            "tier": "community" 
        },
        "author": {
            "name": "FBVitor"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "QA_2_Update-Incidents-sourceTenant",
            "type": "string"
        },
        "Tenant2PlaybookName": {
            "defaultValue": "QA_2_CreateOrUpdate-Incidents-remoteTenant",
            "type": "string"
        },
        "AppRegistrationID": {
            "defaultValue": "<APP-REGISTRATION-AUTH-TENANT2>",
            "type": "string"
        },
        "AppRegistrationSecret": {
            "defaultValue": "<APP-REGISTRATION-PWD-AUTH-TENANT2>",
            "type": "securestring"
        },
        "ManagedIdentity": {
            "defaultValue": "<MI-AUTH-TENANT1>",
            "type": "string"
        },
        "Tenant2tenantID": {
            "defaultValue": "<TENANT-ID>",
            "type": "string"
        },
        "Tenant2SubscriptionID": {
            "defaultValue": "<SUBSCRIPTION-ID>",
            "type": "string"
        },
        "Tenant2RG": {
            "defaultValue": "<RESOURCE-GROUP-NAME>",
            "type": "string"
        },
        "Tenant2LAW": {
            "defaultValue": "<LOG-ANALYTICS-WORKSPACE-NAME>",
            "type": "string"
        },
        "Tenant1SubscriptionID": {
            "defaultValue": "<SUBSCRIPTION-ID>",
            "type": "string"
        },
        "Tenant1RG": {
            "defaultValue": "<RESOURCE-GROUP-NAME>",
            "type": "string"
        },
        "Tenant1LAW": {
            "defaultValue": "<LOG-ANALYTICS-NAME>",
            "type": "string"
        }
    },
    "variables": {
        "MSSentinelTenant1Conn": "[concat('mssentinel-tenant1-', parameters('PlaybookName'))]",
        "MSSentinelTenant2Conn": "[concat('mssentinel-tenant2-', parameters('PlaybookName'))]",
        "LogAnalyticsTenant1Conn": "[concat('loganalytics-tenant1-', parameters('PlaybookName'))]",
        "LogAnalyticsTenant2Conn": "[concat('loganalytics-tenant2-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MSSentinelTenant1Conn')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MSSentinelTenant1Conn')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MSSentinelTenant2Conn')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MSSentinelTenant2Conn')]",
                "customParameterValues": {},
                "parameterValueType": "",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                },
                "parameterValues": {
                    "token:TenantId": "[parameters('Tenant2tenantID')]",
                    "token:clientId": "[parameters('AppRegistrationID')]",
                    "token:grantType": "client_credentials",
                    "token:clientSecret": "[parameters('AppRegistrationSecret')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('LogAnalyticsTenant1Conn')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('LogAnalyticsTenant1Conn')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                    "name": "managedIdentityAuth",
                    "values": {}
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('LogAnalyticsTenant2Conn')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('LogAnalyticsTenant2Conn')]",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                },
                "parameterValues": {
                    "token:TenantId": "[parameters('Tenant2tenantID')]",
                    "token:clientId": "[parameters('AppRegistrationID')]",
                    "token:grantType": "client_credentials",
                    "token:clientSecret": "[parameters('AppRegistrationSecret')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Manage-incidents-on-remote-tenant",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ManagedIdentity'))]": {}
                }            
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MSSentinelTenant1Conn'))]",
                "[resourceId('Microsoft.Web/connections', variables('MSSentinelTenant2Conn'))]",
                "[resourceId('Microsoft.Web/connections', variables('LogAnalyticsTenant2Conn'))]"
                ],
            "properties": {
                "state": "Enabled",
                
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Initialize_variable_IncidentClassificationInfo": {
                            "description": "If the incident is to be closed, we need to handle the reason (native isn't working properly)",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentClassificationInfo",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_IncidentUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_IncidentUpdates": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentUpdates",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_TargetTenantIncidentArmIDFull": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_ParseIncidentID": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ParseIncident",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_IncidentClassificationInfo": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_ParseIncidentId2": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ParseIncident2",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_ParseIncidentID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_ParseIncidentId3": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ParseIncident3",
                                        "type": "integer"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_ParseIncidentId2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_TagFullInfo": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TagFullInfo",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_TargetTenantIncidentNumber": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_TargetTenantIncidentArmID": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TargetTenantIncidentArmID",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_TagFullInfo": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_TargetTenantIncidentArmIDFull": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TargetTenantIncidentArmIDFull",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_TargetTenantIncidentArmID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_TargetTenantIncidentNumber": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TargetTenantIncidentNumber",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "SET_PLAYBOOK_NAME": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "SET_PLAYBOOK_NAME": {
                            "description": "Set Playbook Name to avoid duplication. When Incident on Tenant 1 (EU) is updated by Playbook of Tenant 2, this Playbook will end without any changes.",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PlaybookName",
                                        "type": "string",
                                        "value": "QA_1_CreateOrUpdate-Incidents-remoteTenant"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Validate_if_the_update_wasn't_made_by_Automation_of_Tenant_2": {
                            "actions": {},
                            "else": {
                                "actions": {
                                    "For_each_2": {
                                        "actions": {
                                            "Condition_to_validate_if_the_tag_identifying_the_source_tenant_exists": {
                                                "actions": {
                                                    "Delay": {
                                                        "description": "Log Analytics Workspace needs time to accommodate data",
                                                        "inputs": {
                                                            "interval": {
                                                                "count": 1,
                                                                "unit": "Minute"
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Set_variable_Target_Tenant_Incident_Number_(parsed)": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Wait"
                                                    },
                                                    "If_Incident_already_exists_on_target_tenant": {
                                                        "actions": {
                                                            "For_each": {
                                                                "actions": {
                                                                    "For_each_3": {
                                                                        "actions": {
                                                                            "Add_comment_to_incident_(V3)": {
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@variables('TargetTenantIncidentArmIDFull')",
                                                                                        "message": "<p>The incident <strong>has been updated to the state</strong>. The field(s) (@{body('Parse_JSON_to_find_updates')?['updatedFields']}) in the target tenant (EU) has changed:<br>\n<br>\nUpdated by: @{body('Parse_JSON_to_find_updates')?['updatedBy']?['name']} at @{body('Parse_JSON_to_find_updates')?['updatedTime']}<br>\nAlerts: @{body('Parse_JSON_to_find_updates')?['alerts']}<br>\nUpdated fields: @{body('Parse_JSON_to_find_updates')?['updatedFields']}<br>\nTags: @{body('Parse_JSON_to_find_updates')?['labels']}<br>\nComments: @{body('Parse_JSON_to_find_updates')?['comments']}<br>\nTactics: @{body('Parse_JSON_to_find_updates')?['tactics']}<br>\nSource: @{body('Parse_JSON_to_find_updates')?['updatedBy']?['source']}</p>"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "post",
                                                                                    "path": "/Incidents/Comment"
                                                                                },
                                                                                "runAfter": {
                                                                                    "Condition_to_validate_if_the_incident_was_closed": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "ApiConnection"
                                                                            },
                                                                            "Condition_to_validate_if_the_incident_was_closed": {
                                                                                "actions": {
                                                                                    "Close_incident_(on_the_source_or_remote_tenant)": {
                                                                                        "inputs": {
                                                                                            "body": {
                                                                                                "classification": {
                                                                                                    "ClassificationAndReason": "@variables('IncidentClassificationInfo')",
                                                                                                    "ClassificationReasonText": "@body('Get_incident')?['properties']?['classificationComment']"
                                                                                                },
                                                                                                "incidentArmId": "@variables('TargetTenantIncidentArmIDFull')",
                                                                                                "owner": "@body('Get_incident')?['properties']?['owner']?['email']",
                                                                                                "ownerAction": "@body('Get_incident')?['properties']?['owner']?['assignedTo']",
                                                                                                "severity": "@body('Get_incident')?['properties']?['severity']",
                                                                                                "status": "Closed"
                                                                                            },
                                                                                            "host": {
                                                                                                "connection": {
                                                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                                }
                                                                                            },
                                                                                            "method": "put",
                                                                                            "path": "/Incidents"
                                                                                        },
                                                                                        "runAfter": {},
                                                                                        "type": "ApiConnection"
                                                                                    }
                                                                                },
                                                                                "else": {
                                                                                    "actions": {
                                                                                        "Update_incident_(on_the_source_or_remote_tenant)": {
                                                                                            "inputs": {
                                                                                                "body": {
                                                                                                    "incidentArmId": "@variables('TargetTenantIncidentArmIDFull')",
                                                                                                    "owner": "@body('Get_incident')?['properties']?['owner']?['email']",
                                                                                                    "ownerAction": "@body('Get_incident')?['properties']?['owner']?['assignedTo']",
                                                                                                    "severity": "@body('Get_incident')?['properties']?['severity']",
                                                                                                    "status": "@body('Get_incident')?['properties']?['status']"
                                                                                                },
                                                                                                "host": {
                                                                                                    "connection": {
                                                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                                    }
                                                                                                },
                                                                                                "method": "put",
                                                                                                "path": "/Incidents"
                                                                                            },
                                                                                            "runAfter": {},
                                                                                            "type": "ApiConnection"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "expression": {
                                                                                    "and": [
                                                                                        {
                                                                                            "equals": [
                                                                                                "@body('Get_incident')?['properties']?['status']",
                                                                                                "Closed"
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "runAfter": {
                                                                                    "Set_variable_Incident_Classification_Info": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "If"
                                                                            },
                                                                            "Get_incident_(from_the_source_or_remote_tenant)": {
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@variables('TargetTenantIncidentArmIDFull')"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "post",
                                                                                    "path": "/Incidents"
                                                                                },
                                                                                "runAfter": {
                                                                                    "Set_variable_Incident_Arm_Id_(substring_used_by_Sentinel_to_update)": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "ApiConnection"
                                                                            },
                                                                            "Parse_JSON_to_find_updates": {
                                                                                "inputs": {
                                                                                    "content": "@variables('IncidentUpdates')",
                                                                                    "schema": {
                                                                                        "properties": {
                                                                                            "alerts": {
                                                                                                "type": "array"
                                                                                            },
                                                                                            "comments": {
                                                                                                "type": "array"
                                                                                            },
                                                                                            "labels": {
                                                                                                "type": "array"
                                                                                            },
                                                                                            "tactics": {
                                                                                                "type": "array"
                                                                                            },
                                                                                            "updatedBy": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "source": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "updatedFields": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "updatedTime": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "runAfter": {
                                                                                    "Set_variable_Incident_Updates": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "ParseJson"
                                                                            },
                                                                            "Set_variable_Incident_Arm_Id_(substring_used_by_Sentinel_to_update)": {
                                                                                "inputs": {
                                                                                    "name": "TargetTenantIncidentArmIDFull",
                                                                                    "value": "@{substring(variables('TargetTenantIncidentArmID'), 74,239)}"
                                                                                },
                                                                                "runAfter": {
                                                                                    "Set_variable_Incident_Url": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "SetVariable"
                                                                            },
                                                                            "Set_variable_Incident_Classification_Info": {
                                                                                "inputs": {
                                                                                    "name": "IncidentClassificationInfo",
                                                                                    "value": "@{concat(body('Get_incident')?['properties']?['classification'],' - ',body('Get_incident')?['properties']?['classificationReason'])}"
                                                                                },
                                                                                "runAfter": {
                                                                                    "Parse_JSON_to_find_updates": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "SetVariable"
                                                                            },
                                                                            "Set_variable_Incident_Updates": {
                                                                                "inputs": {
                                                                                    "name": "IncidentUpdates",
                                                                                    "value": "@{triggerBody()?['incidentUpdates']}"
                                                                                },
                                                                                "runAfter": {
                                                                                    "Get_incident_(from_the_source_or_remote_tenant)": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "SetVariable"
                                                                            },
                                                                            "Set_variable_Incident_Url": {
                                                                                "inputs": {
                                                                                    "name": "TargetTenantIncidentArmID",
                                                                                    "value": "@items('For_each_3')['IncidentUrl']"
                                                                                },
                                                                                "runAfter": {},
                                                                                "type": "SetVariable"
                                                                            }
                                                                        },
                                                                        "foreach": "@body('Parse_JSON')",
                                                                        "runAfter": {
                                                                            "Parse_JSON": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "Foreach"
                                                                    },
                                                                    "Parse_JSON": {
                                                                        "description": "To update remote log analytics workspace. Incident Number and Url are required",
                                                                        "inputs": {
                                                                            "content": "@body('Run_query_and_list_results_(Query_Remote_Sentinel_to_find_IncidentARMID)')?['value']",
                                                                            "schema": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "IncidentNumber": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "IncidentUrl": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "IncidentNumber",
                                                                                        "IncidentUrl"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "ParseJson"
                                                                    }
                                                                },
                                                                "foreach": "@body('Run_query_and_list_results_(Query_Remote_Sentinel_to_find_IncidentARMID)')?['value']",
                                                                "runAfter": {},
                                                                "type": "Foreach"
                                                            }
                                                        },
                                                        "description": "The incident was found in the source tenant? ",
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@length(body('Run_query_and_list_results_(Query_Remote_Sentinel_to_find_IncidentARMID)')?['value'])",
                                                                            0
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "runAfter": {
                                                            "Run_query_and_list_results_(Query_Remote_Sentinel_to_find_IncidentARMID)": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Run_query_and_list_results_(Query_Remote_Sentinel_to_find_IncidentARMID)": {
                                                        "inputs": {
                                                            "body": "SecurityIncident\n| where TimeGenerated > ago(180d)\n| extend cIncidentNumber = substring(\"CN_ID:@{variables('TargetTenantIncidentNumber')}\", 6, 20)\n| extend intIN = toint(cIncidentNumber)\n| where intIN == IncidentNumber\n| distinct IncidentNumber, IncidentUrl",
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/queryData",
                                                            "queries": {
                                                                "resourcegroups": "rg-infra-fv-01",
                                                                "resourcename": "law-ded-sentinel-fv-01",
                                                                "resourcetype": "Log Analytics Workspace",
                                                                "subscriptions": "9d7c7c36-a69d-4846-9f7b-654cfd7a59e9",
                                                                "timerange": "Set in query"
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Delay": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection"
                                                    },
                                                    "Set_variable_ParseIncidentId_step_1": {
                                                        "description": "Step 1:  Get variable data to a custom variable",
                                                        "inputs": {
                                                            "name": "ParseIncident",
                                                            "value": "@{items('For_each_2')?['labelName']}"
                                                        },
                                                        "runAfter": {},
                                                        "type": "SetVariable"
                                                    },
                                                    "Set_variable_ParseIncidentId_step_2": {
                                                        "description": "Step 2: Get length of the combined Id",
                                                        "inputs": {
                                                            "name": "ParseIncident2",
                                                            "value": "@{length(variables('ParseIncident'))}"
                                                        },
                                                        "runAfter": {
                                                            "Set_variable_ParseIncidentId_step_1": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable"
                                                    },
                                                    "Set_variable_ParseIncidentId_step_3": {
                                                        "description": "Step 3: Excluding the first 6 characters, who may characters does the IncidentId has?",
                                                        "inputs": {
                                                            "name": "ParseIncident3",
                                                            "value": "@sub(int(variables('ParseIncident2')),6)"
                                                        },
                                                        "runAfter": {
                                                            "Set_variable_ParseIncidentId_step_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable"
                                                    },
                                                    "Set_variable_Target_Tenant_Incident_Number_(parsed)": {
                                                        "description": "Step 4: Parse the variable with checking how many characters",
                                                        "inputs": {
                                                            "name": "TargetTenantIncidentNumber",
                                                            "value": "@{substring(items('For_each_2')?['labelName'], 6, variables('ParseIncident3'))}"
                                                        },
                                                        "runAfter": {
                                                            "Set_variable_ParseIncidentId_step_3": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable"
                                                    }
                                                },
                                                "description": "Sanity check: The Incident is really from Source tenant",
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "startsWith": [
                                                                "@items('For_each_2')?['labelName']",
                                                                "CN_ID:"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Set_variable_Tag_Full_Info": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Set_variable_Tag_Full_Info": {
                                                "inputs": {
                                                    "name": "TagFullInfo",
                                                    "value": "@items('For_each_2')?['labelName']"
                                                },
                                                "runAfter": {},
                                                "type": "SetVariable"
                                            }
                                        },
                                        "foreach": "@body('Get_incident')?['properties']?['labels']",
                                        "runAfter": {
                                            "Get_incident": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Foreach"
                                    },
                                    "Get_incident": {
                                        "description": "When need to identify the \"tag\" to identify the Incident Number in the target tenant",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['incidentUpdates']?['updatedBy']?['name']",
                                            "@variables('PlaybookName')"
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_ParseIncidentId3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    }
                },


                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('LogAnalyticsTenant2Conn'))]",
                                "connectionName": "[variables('LogAnalyticsTenant2Conn')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuremonitorlogs_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('LogAnalyticsTenant1Conn'))]",
                                "connectionName": "[variables('LogAnalyticsTenant1Conn')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ManagedIdentity'))]",
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MSSentinelTenant2Conn'))]",
                                "connectionName": "[variables('MSSentinelTenant2Conn')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "azuresentinel_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MSSentinelTenant1Conn'))]",
                                "connectionName": "[variables('MSSentinelTenant1Conn')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ManagedIdentity'))]",
                                        "type": "ManagedServiceIdentity"
                                        }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}